name: Build and Push
on:
  push:
    branches:
      - staging # Will trigger on pushes to staging branch
    tags:
      - "v*" # Will trigger on version tags (for production releases)
  pull_request:
    branches: [main, staging] # Will trigger on PRs to both main and staging

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Set environment-specific tag prefix
      - name: Set environment tag
        id: envtag
        run: |
          if [[ $GITHUB_REF == refs/heads/staging ]]; then
            echo "PREFIX=staging" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "PREFIX=prod" >> $GITHUB_OUTPUT
          else
            echo "PREFIX=pr" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ steps.envtag.outputs.PREFIX }}-latest
            type=semver,pattern=${{ steps.envtag.outputs.PREFIX }}-{{raw}}
            type=semver,pattern=${{ steps.envtag.outputs.PREFIX }}-{{version}}
            type=sha,prefix=${{ steps.envtag.outputs.PREFIX }}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }} # Don't push on PRs
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Optional: Deploy to the appropriate environment
      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          echo "Deploying to staging environment"
          # Add your deployment commands here
          # e.g., kubectl apply -f k8s/staging/ --namespace=staging

      - name: Deploy to Production
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "Deploying to production environment"
          # Add your production deployment commands here
          # e.g., kubectl apply -f k8s/production/ --namespace=production
